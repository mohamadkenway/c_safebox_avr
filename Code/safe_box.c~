#include <mega32.h>
#include <alcd.h>
#include <string.h>
#include <delay.h>

char openMessage[]           = "DOOR IS OPEN";
char lockedMessage[]         = "DOOR Locked";
char enterPasswoerdMessage[] = "Enter Password :";
char passwordSetMessage[]    = "Setting Password";
char wrongPasswordMessage[]  = "Wrong Password";
char resetPasswordMessage[]  = "Reset Password .....";
char password[]              = "******";
char enteredPasssword[]      = "******";

int  doorStatusFlag          = 0; // 0 = open , 1 = locked
int  resetPasswordCounter    = 0;
int  enteredPasswordCounter    = 0;

flash char Pattern[4] = {0xFE, 0xFD, 0xFB, 0xF7};
flash char key_number [4][4]={'7', '8', '9', '/',
                              '4', '5', '6', '*',
                              '1', '2', '3', '-',
                              'C', '0', '=', '+'};

flash char resetKeys[4] = {'+','-','*','/'};


void printMessage(char message[],int size){
    int i;
    for(i = 0;i<size;i++){
        lcd_putchar(message[i]);
    }
}

char keypad(void)
{
    char i, column = 4;

    for (i=0; i<4; i++)
    {
       PORTD = Pattern[i];

       if (PIND.4 == 0)
       {
           column = 0;
           break;
       }

       if (PIND.5 == 0)
       {
           column = 1;
           break;
       }

       if (PIND.6 == 0)
       {
           column = 2;
           break;
       }

       if (PIND.7 == 0)
       {
           column = 3;
           break;
       }
    }

    if (column != 4)
    {
       while (PIND.4 == 0) {};
       while (PIND.5 == 0) {};
       while (PIND.6 == 0) {};
       while (PIND.7 == 0) {};
       return key_number[i][column];
    }
    else
        return 0;


}

void setPassword(){

 int counter = 0;
 char ch;

 printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));

 while (1){

 ch = keypad();

 if (ch == 'C'){
    lcd_clear();
    printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));
    counter = 0;
 }
 if(counter == 6 && ch == '='){
     lcd_clear();
     printMessage(passwordSetMessage,sizeof(passwordSetMessage));
     delay_ms(2000);
     lcd_clear();
     printMessage(openMessage,sizeof(openMessage));
    return;
 }
 if (ch != 0 && ch != '/' && ch != '*' && ch != '+' && ch != '-' && ch != '=' && counter != 6){

  if (ch != 'C'){
   lcd_putchar(ch);
   password[counter] = ch;
   counter++;
   }

  }

 }

}

int  isPasswordCorrect(){
    int i;
    for (i = 0;i<6;i++){
     if(password[i] != enteredPasssword[i])
      return 0;
    }
    return 1;
}


void main(void)
{
char ch;

DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);

// Port D initialization
// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
// State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=0 Bit2=0 Bit1=0 Bit0=0
PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);

lcd_init(16);

/////////////////////////



setPassword();


while (1)
      {

          ch = keypad();

          if (ch != 0)
          {
             //reset password

             if(ch == '+' || ch == '-' || ch == '/' || ch == '*'){
                if(ch == '+'){
                resetPasswordCounter = 1;
                }
                else if(ch == '-' && resetPasswordCounter == 1){
                resetPasswordCounter = 2;
                }
                else if(ch == '*' && resetPasswordCounter == 2){
                resetPasswordCounter = 3;
                }
                else if(ch == '/' && resetPasswordCounter == 3){
                resetPasswordCounter = 0;
                enteredPasswordCounter = 0;
                lcd_clear();
                doorStatusFlag = 0;
                printMessage(resetPasswordMessage,sizeof(resetPasswordMessage));
                delay_ms(1000);
                lcd_clear();
                setPassword();
                }
                else {resetPasswordCounter = 0;}
             }


             else if (ch == 'C' && doorStatusFlag == 0){
              resetPasswordCounter = 0;
              enteredPasswordCounter = 0;
              doorStatusFlag = 1;
              lcd_clear();
              printMessage(lockedMessage,sizeof(lockedMessage));
              delay_ms(2000);
              lcd_clear();
              printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));
             }




              // entering password
             else if (ch != 'C' && ch != '*' && ch != '/' && ch != '+' &&
                 ch != '-' && ch != '=' && enteredPasswordCounter != 6 && doorStatusFlag == 1){
               resetPasswordCounter = 0;
               enteredPasssword[enteredPasswordCounter] = ch;
               enteredPasswordCounter++;
               lcd_putchar(ch);
              }

              else if(ch == 'C' && enteredPasswordCounter > 0){
              resetPasswordCounter = 0;
              lcd_clear();
              enteredPasswordCounter = 0;
              printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));
             }


             // check entered password
             else if(ch == '=' && enteredPasswordCounter != 6 && doorStatusFlag == 1){
                resetPasswordCounter = 0;
                lcd_clear();
                enteredPasswordCounter = 0;
                printMessage(wrongPasswordMessage,sizeof(wrongPasswordMessage));
                delay_ms(1000);
                lcd_clear();
                printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));
              }

             else if(ch == '=' && enteredPasswordCounter == 6 && doorStatusFlag == 1){
              resetPasswordCounter = 0;
              if(isPasswordCorrect() == 1){
                doorStatusFlag = 0;
                lcd_clear();
                printMessage(openMessage,sizeof(openMessage));
              }
              else{
                lcd_clear();
                enteredPasswordCounter = 0;
                printMessage(wrongPasswordMessage,sizeof(wrongPasswordMessage));
                delay_ms(1000);
                lcd_clear();
                printMessage(enterPasswoerdMessage,sizeof(enterPasswoerdMessage));
              }
             }

        }

      }
}

